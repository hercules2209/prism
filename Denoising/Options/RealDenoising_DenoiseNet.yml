# DenoiseNet Training Configuration

# general settings
name: RealDenoising_DenoiseNet
model_type: ImageCleanModel
scale: 1
num_gpu: 1
manual_seed: 100
is_train: true

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage
    dataroot_gt: ./Denoising/Datasets/train/SIDD/target_crops
    dataroot_lq: ./Denoising/Datasets/train/SIDD/input_crops
    geometric_augs: true
    filename_tmpl: '{}'
    io_backend:
      type: disk

    # Progressive training settings
    use_shuffle: true
    num_worker_per_gpu: 3
    batch_size_per_gpu: 3
    mini_batch_sizes: [3]              # Reduced stages for 200k iterations
    iters: [400000]         
    gt_size: 256  # Max patch size
    gt_sizes: [256]              # Progressive patch sizes
    dataset_enlarge_ratio: 1
    pin_memory: true
    prefetch_mode: cuda

  val:
    name: ValSet
    type: Dataset_PairedImage
    dataroot_gt: ./Denoising/Datasets/val/SIDD/target_crops
    dataroot_lq: ./Denoising/Datasets/val/SIDD/input_crops
    io_backend:
      type: disk

# network structures
network_g:
  type: DenoiseNet
  channels: [64, 128, 256, 512]  # Channel configuration for 4 encoder/decoder blocks
  enc_blocks: [2, 2, 2, 2]  # Number of blocks per encoder stage
  dec_blocks: [2, 2, 2, 2]  # Number of blocks per decoder stage
  mid_blocks: 2  # Number of blocks in the middle


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~
  experiments_root: experiments/RealDenoising_DenoiseNet  
  models: experiments/RealDenoising_DenoiseNet/models     
  training_states: experiments/RealDenoising_DenoiseNet/training_states 
  log: experiments/RealDenoising_DenoiseNet/logs         
  visualization: experiments/RealDenoising_DenoiseNet/visualization  

# training settings
train:
  total_iter: 400000
  warmup_iter: -1
  use_grad_clip: true
  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 400000
    eta_min: !!float 1e-7
  
  mixing_augs:
    mixup: true
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: AdamW
    lr: !!float 1e-3
    weight_decay: 0.
    betas: [0.9, 0.9]
  
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean
    
# validation settings
val:
  window_size: 8
  val_freq: !!float 5e3 
  save_img: true # Save validation images
  rgb2bgr: true    
  use_image: false  
  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim  
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 500
  save_checkpoint_freq: !!float 5e3 # checkpoint saving
  use_tb_logger: true
  wandb:           
    project: ~
    resume_id: ~

# dist training settings
dist_params:  
  backend: nccl
  port: 29500
